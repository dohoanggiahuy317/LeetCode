class Solution:
    def maxOperations(self, s: str) -> int:
        # t = 3
        # 1 1 1 2 3 4 4 5
        # 100011001010111001
        # 000111001010111001
        # 000110011010111001
        # 000100111010111001
        # 000001111010111001
        # 000001110110111001
        # 000001101110111001
        # 000001011110111001
        # 000000111110111001
        # 000000111101111001
        # 000000111011111001
        # 000000110111111001
        # 000000101111111001
        # 000000011111111001
        # 000000011111110011
        # 000000011111100111
        # 000000011111001111
        # 000000011110011111
        # 000000011100111111
        # 000000011001111111
        # 000000010011111111
        # 000000000111111111

        import re


        g = re.split('0+', s)
        g = [group.strip("0") for group in g if group]
        
        # print(g)
        ans = 0
        if s[-1] == "0":
            c = 1
            for i in range(len(g) - 1, -1, -1):
                ans += c * len(g[i])
                c += 1

            return ans
        else:
            c = 0
            for i in range(len(g) - 1, -1, -1):
                ans += c * len(g[i])
                c += 1

            return ans
        return ans
    